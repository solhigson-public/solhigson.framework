# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master
  - "*.release"

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  frameworkProj: '**/Solhigson.Framework/Solhigson.Framework.csproj'
  toolsProj: '**/Solhigson.Framework.EfCoreTool/Solhigson.Framework.EfCoreTool.csproj'
  utilitiesProj: '**/Solhigson.Utilities/Solhigson.Utilities.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  package: false
  isMaster: $[eq(variables['Build.SourceBranchName'], 'master')]
  packageFramework: $[and(eq(variables.package, true), eq(variables.isMaster, true), true)]
  packageTool: $[and(eq(variables.package, true), eq(variables.isMaster, true), false)]
  packageUtilities: $[and(eq(variables.package, true), eq(variables.isMaster, true), false)]

stages:
  - stage: build
    condition: and(eq(variables.isMaster, true), eq(variables.package, false))
    displayName: Validate Check-in
    jobs:
      - job:
        displayName: Build
        steps:
          - task: NuGetToolInstaller@1
            displayName: Install Nuget Tool

          - task: NuGetCommand@2
            displayName: Restore Nuget Packages
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'config'

          - task: VSBuild@1
            displayName: Build Project
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'


  - stage: nuget_package_framework
    condition:  eq(variables.packageFramework, true)
    displayName: Deploy Solhigson Framework package to Nuget.Org
    jobs:
      - job:
        displayName: Package & Push Solhigson Framework
        steps:
          - task: NuGetToolInstaller@1
            displayName: Install Nuget Tool

          - task: NuGetCommand@2
            displayName: Restore Nuget Packages
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'config'

          - task: VSBuild@1
            displayName: Build Project
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Package Framework'
            inputs:
              command: 'pack'
              packagesToPack: '$(frameworkProj)'
              versioningScheme: 'off'

          - task: NuGetCommand@2
            displayName: 'Push'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'nuget'

  - stage: nuget_package_efCoreTool
    condition:  eq(variables.packageTool, true)
    displayName: Deploy EfCoreTool to Nuget.Org
    jobs:
      - job:
        displayName: Package & Push EFCoreTool
        steps:
          - task: NuGetToolInstaller@1
            displayName: Install Nuget Tool

          - task: NuGetCommand@2
            displayName: Restore Nuget Packages
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'config'

          - task: VSBuild@1
            displayName: Build Project
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Package EfCoreTool'
            inputs:
              command: 'pack'
              packagesToPack: '$(toolsProj)'
              versioningScheme: 'off'

          - task: NuGetCommand@2
            displayName: 'Push'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'nuget'
              
            
            
            

  - stage: nuget_package_utilities
    condition:  eq(variables.packageUtilities, true)
    displayName: Deploy Solhigson Utilities package to Nuget.Org
    jobs:
      - job:
        displayName: Package & Push Solhigson Utilities
        steps:
          - task: NuGetToolInstaller@1
            displayName: Install Nuget Tool

          - task: NuGetCommand@2
            displayName: Restore Nuget Packages
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'config'

          - task: VSBuild@1
            displayName: Build Project
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Package Utilities'
            inputs:
              command: 'pack'
              packagesToPack: '$(utilitiesProj)'
              versioningScheme: 'off'

          - task: NuGetCommand@2
            displayName: 'Push'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'nuget'
