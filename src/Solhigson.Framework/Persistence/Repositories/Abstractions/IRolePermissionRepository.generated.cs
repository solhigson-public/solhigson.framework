using System.Threading.Tasks;

namespace Solhigson.Framework.Persistence.Repositories.Abstractions
{
    /*
     * Generated by: Solhigson.Framework.efcoretool
     *
     * https://github.com/solhigson-public/solhigson.framework
     * https://www.nuget.org/packages/solhigson.framework.efcoretool
     *
     * This file is ALWAYS overwritten, DO NOT place custom code here
     */
    public partial interface IRolePermissionRepository 
        : Solhigson.Framework.Persistence.Repositories.Abstractions.ISolhigsonCachedRepositoryBase<Solhigson.Framework.Persistence.EntityModels.RolePermission
            ,Solhigson.Framework.Persistence.CacheModels.RolePermissionCacheModel>
    {
		Task<Solhigson.Framework.Persistence.EntityModels.RolePermission> GetByIdAsync(int id);
		Task<Solhigson.Framework.Persistence.EntityModels.RolePermission> GetByRoleIdAndPermissionIdAsync(string roleId, string permissionId);
		Task<System.Collections.Generic.IList<Solhigson.Framework.Persistence.EntityModels.RolePermission>> GetByRoleIdAsync(string roleId);

		//Cached Methods
		Solhigson.Framework.Persistence.CacheModels.RolePermissionCacheModel GetByIdCached(int id);
		Solhigson.Framework.Persistence.CacheModels.RolePermissionCacheModel GetByRoleIdAndPermissionIdCached(string roleId, string permissionId);
		System.Collections.Generic.IList<Solhigson.Framework.Persistence.CacheModels.RolePermissionCacheModel> GetByRoleIdCached(string roleId);
    
    }
}